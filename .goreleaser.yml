# .goreleaser.yml
release:
  # If set to auto, will mark the release as not ready for production
  # in case there is an indicator for this in the tag e.g. v1.0.0-rc1
  # If set to true, will mark the release as not ready for production.
  # Default is false.
  prerelease: auto

  # You can change the name of the release.
  # Default is `{{.Tag}}`
  name_template: "{{.ProjectName}}-v{{.Version}}"
  # You can disable this pipe in order to not upload any artifacts.
  # Defaults to false.
  # disable: true
  # You can add extra pre-existing files to the release.
  # The filename on the release will be the last part of the path (base). If
  # another file with the same name exists, the latest one found will be used.
  # Defaults to empty.
  # extra_files:
  #   - glob: ./path/to/file.txt
  #   - glob: ./glob/**/to/**/file/**/*
  #   - glob: ./glob/foo/to/bar/file/foobar/override_from_previous

builds:
  # You can have multiple builds defined as a yaml list
  - # ID of the build.
    # Defaults to the project name.
    # id: "my-build"

    # Path to project's (sub)directory containing Go code.
    # This is the working directory for the Go build command(s).
    # Default is `.`.
    # dir: go

    # Path to main.go file or main package.
    # Default is `.`.
    # main: ./cmd/main.go

    # Binary name.
    # Can be a path (e.g. `bin/app`) to wrap the binary in a directory.
    # Default is the name of the project directory.
    binary: autoEqMac

    # Custom flags templates.
    # Default is empty.
    # flags:
    # - -tags=dev
    # - -v

    # Custom asmflags templates.
    # Default is empty.
    # asmflags:
    # - -D mysymbol
    # - all=-trimpath={{.Env.GOPATH}}

    # Custom gcflags templates.
    # Default is empty.
    # gcflags:
    #   - all=-trimpath={{.Env.GOPATH}}
    #   - ./dontoptimizeme=-N

    # Custom ldflags templates.
    # Default is `-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{.Date}} -X main.builtBy=goreleaser`.
    # ldflags:
    #   - -s -w -X main.build={{.Version}}
    #   - ./usemsan=-msan

    # Custom environment variables to be set during the builds.
    # Default is empty.
    env:
      - CGO_ENABLED=0

    # GOOS list to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are darwin and linux.
    goos:
      - darwin

    # GOARCH to build for.
    # For more info refer to: https://golang.org/doc/install/source#environment
    # Defaults are 386 and amd64.
    goarch:
      - amd64
      - arm64

    # # GOARM to build for when GOARCH is arm.
    # # For more info refer to: https://golang.org/doc/install/source#environment
    # # Default is only 6.
    # goarm:
    #   - 6
    #   - 7

    # # GOMIPS and GOMIPS64 to build when GOARCH is mips, mips64, mipsle or mips64le.
    # # For more info refer to: https://golang.org/doc/install/source#environment
    # # Default is empty.
    # gomips:
    #   - hardfloat
    #   - softfloat

    # List of combinations of GOOS + GOARCH + GOARM to ignore.
    # Default is empty.
    # ignore:
    #   - goos: darwin
    #     goarch: 386
    #   - goos: linux
    #     goarch: arm
    #     goarm: 7
    #   - goarm: mips64
    #     gomips: hardfloat

    # # Set a specific go binary to use when building. It is safe to ignore
    # # this option in most cases.
    # # Default is "go"
    # gobinary: "go1.13.4"

    # Set the modified timestamp on the output binary, typically
    # you would do this to ensure a build was reproducible. Pass
    # empty string to skip modifying the output.
    # Default is empty string.
    mod_timestamp: "{{ .CommitTimestamp }}"

    # Hooks can be used to customize the final binary,
    # for example, to run generators.
    # Those fields allow templates.
    # Default is both hooks empty.
    hooks:
      pre: go mod download

    # If true, skip the build.
    # Useful for library projects.
    # Default is false
    skip: false

checksum:
  # You can change the name of the checksums file.
  # Default is `{{ .ProjectName }}_{{ .Version }}_checksums.txt`.
  # name_template: "{{ .ProjectName }}_checksums.txt"

  # Algorithm to be used.
  # Accepted options are sha256, sha512, sha1, crc32, md5, sha224 and sha384.
  # Default is sha256.
  algorithm: sha256
  # Disable the generation/upload of the checksum file.
  # Default is false.
  # disable: true
